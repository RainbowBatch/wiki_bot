import diff_match_patch as dmp_module
from transcripts import create_full_transcript_listing, parse_transcript


macro_result = [(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 19), (21, 19), (22, 20), (23, 21), (24, 22), (25, 22), (26, 22), (27, 23), (28, 23), (29, 23), (30, 23), (31, 23), (32, 24), (33, 25), (34, 25), (35, 25), (36, 25), (37, 25), (38, 25), (39, 25), (40, 25), (41, 25), (42, 25), (43, 25), (44, 26), (45, 27), (46, 28), (47, 28), (48, 28), (49, 29), (50, 30), (51, 31), (52, 31), (53, 31), (54, 32), (55, 33), (56, 33), (57, 33), (58, 33), (59, 33), (60, 34), (61, 35), (62, 36), (63, 37), (64, 38), (65, 39), (66, 40), (67, 41), (68, 42), (69, 43), (70, 44), (71, 44), (72, 45), (73, 45), (74, 46), (75, 46), (76, 47), (77, 48), (78, 48), (79, 49), (80, 50), (81, 51), (82, 52), (83, 52), (84, 52), (85, 53), (86, 54), (87, 55), (88, 56), (89, 57), (90, 58), (91, 58), (92, 58), (93, 59), (94, 60), (95, 60), (96, 60), (97, 61), (98, 62), (99, 63), (100, 63), (101, 63), (102, 64), (103, 65), (104, 65), (105, 65), (106, 66), (107, 66), (108, 66), (109, 67), (110, 68), (111, 68), (112, 69), (113, 70), (114, 71), (115, 71), (116, 71), (117, 72), (118, 73), (119, 74), (120, 74), (121, 75), (122, 76), (123, 77), (124, 78), (125, 78), (126, 78), (127, 79), (128, 80), (129, 81), (130, 82), (131, 83), (132, 84), (133, 85), (134, 86), (135, 86), (136, 86), (137, 86), (138, 87), (139, 88), (140, 89), (141, 90), (142, 90), (143, 90), (144, 91), (145, 92), (145, 93), (146, 94), (147, 94), (148, 94), (149, 95), (150, 96), (151, 97), (152, 98), (153, 99), (154, 100), (155, 101), (156, 102), (157, 103), (158, 104), (159, 105), (160, 106), (161, 107), (162, 108), (163, 109), (164, 109), (165, 109), (166, 110), (167, 111), (168, 112), (169, 112), (170, 112), (171, 113), (172, 114), (173, 114), (174, 114), (175, 114), (176, 114), (177, 115), (178, 116), (179, 117), (180, 118), (181, 119), (182, 120), (183, 121), (184, 122), (185, 122), (186, 123), (187, 124), (188, 125), (189, 126), (190, 127), (191, 127), (192, 127), (193, 128), (194, 129), (195, 129), (196, 130), (197, 131), (198, 132), (199, 133), (200, 134), (201, 135), (202, 136), (203, 137), (204, 138), (205, 138), (206, 138), (207, 138), (208, 138), (209, 139), (210, 140), (211, 140), (212, 140), (213, 141), (214, 141), (215, 142), (216, 143), (217, 144), (218, 145), (219, 146), (220, 147), (221, 148), (222, 149), (223, 150), (224, 151), (225, 152), (226, 153), (227, 154), (228, 155), (229, 155), (230, 155), (231, 155), (232, 155), (233, 156), (234, 156), (235, 157), (236, 158), (237, 159), (238, 160), (239, 161), (240, 162), (241, 163), (242, 164), (243, 165), (244, 166), (245, 167), (246, 168), (247, 169), (248, 170), (249, 171), (250, 172), (251, 173), (252, 174), (253, 175), (254, 176), (255, 177), (256, 178), (257, 179), (258, 180), (259, 181), (260, 182), (261, 183), (262, 184), (263, 185), (264, 186), (265, 187), (266, 188), (267, 189), (268, 190), (269, 191), (270, 192), (271, 193), (272, 194), (273, 194), (274, 194), (275, 195), (276, 196), (277, 197), (278, 198), (279, 199), (280, 200), (281, 200), (282, 200), (283, 201), (284, 202), (285, 203), (286, 204), (287, 205), (288, 206), (289, 207), (290, 208), (291, 209), (292, 210), (293, 211), (294, 212), (295, 213), (296, 214), (297, 214), (298, 215), (299, 216), (300, 216), (301, 216), (302, 217), (303, 218), (304, 219), (305, 220), (306, 221), (307, 222), (308, 223), (309, 224), (310, 225), (311, 226), (312, 227), (313, 228), (314, 229), (315, 230), (316, 231), (317, 231), (318, 231), (319, 232), (320, 233), (321, 234), (322, 235), (323, 236), (324, 237), (325, 238), (326, 239), (327, 239), (328, 239), (329, 240), (330, 241), (331, 242), (332, 243), (333, 244), (334, 245), (335, 246), (336, 247), (337, 248), (338, 249), (339, 250), (340, 251), (341, 251), (342, 251), (343, 252), (344, 253), (345, 253), (346, 253), (347, 254), (348, 255), (349, 256), (350, 257), (351, 258), (352, 258), (353, 259), (354, 259), (355, 260), (356, 261), (357, 262), (358, 263), (359, 264), (360, 265), (361, 266), (362, 267), (363, 267), (364, 267), (365, 268), (366, 269), (367, 270), (368, 271), (369, 272), (370, 272), (371, 272), (372, 273), (373, 274), (374, 275), (375, 276), (376, 276), (377, 276), (378, 276), (379, 276), (380, 277), (381, 278), (382, 279), (383, 279), (384, 280), (385, 281), (386, 282), (387, 283), (388, 284), (389, 284), (390, 284), (391, 285), (392, 286), (393, 287), (394, 288), (395, 289), (396, 290), (397, 291), (398, 292), (399, 293), (400, 294), (401, 295), (402, 296), (403, 297), (404, 298), (405, 299), (406, 300), (407, 301), (408, 302), (409, 302), (410, 302), (411, 303), (412, 304), (413, 304), (414, 304), (415, 304), (416, 304), (417, 305), (418, 306), (419, 307), (420, 308), (421, 309), (422, 310), (423, 311), (424, 311), (425, 311), (426, 312), (427, 312), (428, 312), (429, 312), (430, 312), (431, 313), (432, 313), (433, 313), (434, 314), (435, 315), (436, 316), (437, 317), (438, 318), (439, 319), (440, 320), (441, 321), (442, 322), (443, 323), (444, 323), (445, 323), (446, 324), (447, 325), (448, 326), (449, 327), (450, 328), (451, 328), (452, 329), (453, 330), (454, 331), (455, 331), (456, 331), (457, 332), (458, 332), (459, 332), (460, 333), (461, 334), (462, 334), (463, 334), (464, 335), (465, 336), (466, 337), (467, 338), (468, 339), (469, 340), (470, 341), (471, 342), (472, 342), (473, 342), (474, 343), (475, 344), (476, 344), (477, 344), (478, 345), (479, 345), (480, 345), (481, 346), (482, 347), (483, 348), (484, 349), (485, 349), (486, 349), (487, 350), (487, 351), (488, 352), (489, 353), (490, 354), (491, 354), (492, 354), (493, 355), (494, 356), (495, 357), (496, 358), (497, 359), (498, 360), (499, 361), (500, 362), (501, 363), (502, 364), (503, 365), (504, 366), (505, 367), (506, 368), (507, 369), (508, 370), (509, 371), (510, 372), (511, 373), (512, 374), (513, 375), (514, 376), (515, 377), (516, 378), (517, 379), (518, 380), (519, 381), (520, 382), (521, 383), (522, 384), (523, 385), (524, 386), (525, 387), (526, 388), (527, 389), (528, 390), (529, 391), (530, 392), (531, 393), (532, 394), (533, 395), (534, 396), (535, 397), (536, 398), (537, 399), (538, 400), (539, 401), (540, 402), (541, 403), (542, 404), (543, 405), (544, 406), (545, 407), (546, 407), (547, 407), (548, 407), (549, 407), (550, 407), (551, 407), (552, 408), (553, 409), (554, 410), (555, 411), (556, 412), (557, 413), (558, 414), (559, 415), (560, 416), (561, 417), (562, 418), (563, 419), (564, 420), (565, 421), (566, 422), (567, 423), (568, 424), (569, 425), (570, 426), (571, 426), (572, 426), (573, 427), (574, 428), (575, 429), (576, 429), (577, 429), (578, 429), (579, 429), (580, 430), (581, 430), (582, 430), (583, 430), (584, 431), (585, 432), (586, 432), (587, 432)]


dmp = dmp_module.diff_match_patch()



print("Loading transcripts.")

df = create_full_transcript_listing()


transcript_texts = []
for ep1_transcript in df[df.episode_number == '735'].to_dict(orient='records'):
    print(ep1_transcript)
    transcript_texts.append([(x.text, len(x.text)) for x in parse_transcript(ep1_transcript).blocks])


transcript_texts = [
    transcript_texts[1],
    transcript_texts[2],
]

transcript_texts_2 = []
for tt in transcript_texts:
    i = 0
    blocks = []
    for block in tt:
        blocks.append((block[0], block[1], i, i + block[1] - 1))
        i = i + block[1]
    transcript_texts_2.append(blocks)

transcript_texts = transcript_texts_2

print("DONE")

def process_diff_to_path(z, start):
    current = start
    path = [start]
    for t, segment in z:
        if t == 0:
            delta = (1, 1)
        elif t == 1:
            delta = (0, 1)
        else:
            delta = (1, 0)

        for i in range(len(segment)):
            current = (current[0] + delta[0], current[1] + delta[1])
            path.append(current)
        print(segment)
    # TODO(woursler): Do we have to append the last one?
    print(path)
    print(z)
    return path

import matplotlib.pyplot as plt
from matplotlib.path import Path
import matplotlib.patches as patches

fig, ax = plt.subplots()


for i, j in macro_result:
    print('\n\n\n====\n', transcript_texts[0][i], '\n-\n', transcript_texts[1][j])
    z = dmp.diff_main(transcript_texts[0][i][0], transcript_texts[1][j][0])
    dmp.diff_cleanupSemantic(z)
    verts = process_diff_to_path(z, start=(transcript_texts[0][i][2], transcript_texts[1][j][2]))
    ax.plot([v[0] for v in verts], [v[1] for v in verts])

plt.show()